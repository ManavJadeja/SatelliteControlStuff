function [] = plotAttitudeSim(satelliteModel)

disp('Plotting: Attitude Simulation')


% PRELIMINARY INFORMATION
duration = length(satelliteModel.stateS(:,11));
timeHours = (0:dt:duration) * 60 * 60;
qd = zeros(duration, 4);

for i = 1:length(satelliteModel.commandSystem.stateS)
    command = satelliteModel.commandSystem.stateS(i);
    qd(i,:) = satelliteModel.attitudeSystem.qd(i,:,command);
end
stateS = satelliteModel.stateS;

% QUATERNION DATA
figure('Name', 'Attitude Simulation Quaternions', 'Position', [100 100 900 700])

subplot(2,4,1)
plot(timeHours, stateS(:,1))
title('q1')
hold on
plot(timeHours, qd(:,1))
hold off

subplot(2,4,2)
plot(timeHours, stateS(:,2))
title('q2')
hold on
plot(timeHours, qd(:,2))
hold off

subplot(2,4,3)
plot(timeHours, stateS(:,3))
title('q3')
hold on
plot(timeHours, qd(:,3))
hold off

subplot(2,4,4)
plot(timeHours, stateS(:,4))
title('q4')
hold on
plot(timeHours, qd(:,4))
hold off


% ANGULAR VELOCITY (SATELLITE AND REACTION WHEELS)
figure('Name', 'Attitude Simulation Angular Velocity', 'Position', [100 100 900 700])

subplot(2,3,1)
plot(timeHours, stateS(:,5))



end